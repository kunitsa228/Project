//Можете пожалуйста напомнить, что мне нужно поменять?

#define _CRT_SECURE_NO_DEPRECATE
#define _CRT_SECURE_NO_WARNINGS
#define SIZE_NAME 8
#define TABLE_LINE 8
#define NABLE_COLUMN 4

#include <stdio.h>
#include <locale.h>
#include <string.h>
#include <conio.h>
#include <stdlib.h>


void table(int array[TABLE_LINE][NABLE_COLUMN], char name[SIZE_NAME][SIZE_NAME]);
char sort(int array[TABLE_LINE][NABLE_COLUMN], int arr[10], char name[SIZE_NAME][SIZE_NAME], int start, int end);
void minisort(char name[SIZE_NAME][SIZE_NAME], int arr[10], int start, int end);
int best(int array[TABLE_LINE][NABLE_COLUMN], char name[SIZE_NAME][SIZE_NAME], int new_char[10], int j);
int worst(int array[TABLE_LINE][NABLE_COLUMN], char name[SIZE_NAME][SIZE_NAME], int new_char[10], int j);

void main() {
	system("chcp 1251");
	int array[TABLE_LINE][NABLE_COLUMN] = {
	{ 2, 0, 0, 0},
	{ 6, 3, 0, 0},
	{ 2, 0, 0, 0},
	{ 3, 5, 2, 0},
	{ 5, 6, 0, 0},
	{ 1, 0, 0, 0},
	{ 7, 8, 5, 1},
	{ 4, 0, 0, 0}
	};
	char name[SIZE_NAME][SIZE_NAME] = {
	{"A1"}, // 1
	{"B2"}, // 2
	{"Б2"}, // 3
	{"Г1"}, // 4
	{"А2"}, // 5
	{"Г2"}, // 6
	{"В1"}, // 7
	{"Б1"}, // 8
	};

	int new_char[10];
	int arr[10];

	int z = 0, end = 0, x, y;
	while (end != 4) {
		puts("\nТурнирная таблица по карате, выведение итоговых мест и лучших/худших игроков турнира в заданом этапе.");
		puts("Выберите пункт из списка:");
		puts("1. Вывод промежуточной таблицы;");
		puts("2. Вывод игроков с заданными местами по заданному диапазону мест;");
		puts("3. Вывод лучшего/худшего игрока в выбранном этапе турнира;");
		puts("4. Закончить работу с программой.");
		scanf("%d", &end);
		switch (end) {
		case 1:
			system("cls");
			table(array, name);
			break;

		case 2:
			system("cls");
			puts("Введите диапазон вывода мест");
			puts("Старт: ");
			scanf("%d", &x);
			puts("Конец: ");
			scanf("%d", &y);
			sort(array, arr, name, x - 1, y);
			break;

		case 3:
			system("cls");
			puts("\nВыберите этап турнира");
			puts("1. 1/4");
			puts("2. 1/2");
			puts("3. Финал");
			scanf("%d", &z);
			switch (z) {
			case 1:
				printf("Лучший игрок %s набрал %d баллов\n", new_char, best(array, name, new_char, 0));
				printf("Худший игрок %s набрал %d баллов\n", new_char, worst(array, name, new_char, 0));
				break;

			case 2:
				printf("Лучший игрок %s набрал %d баллов\n", new_char, best(array, name, new_char, 1));
				printf("Худший игрок %s набрал %d баллов\n", new_char, worst(array, name, new_char, 1));
				break;

			case 3:
				printf("Лучший игрок %s набрал %d баллов\n", new_char, best(array, name, new_char, 2));
				printf("Худший игрок %s набрал %d баллов\n", new_char, worst(array, name, new_char, 2));
				break;
			}
			break;
		}
	}
}

// турнирная таблица
void table(int array[TABLE_LINE][NABLE_COLUMN], char name[SIZE_NAME][SIZE_NAME]) {
	printf("|------------|-----|\n");
	printf("| %s         | %d   |\n", name[0], array[0][0]);
	printf("|------------|-----|-----|\n");
	printf("| %s         | %d   |     |     |------------|-----|\n", name[1], array[1][0]);
	printf("|------------|-----|     |     | %s         | %d   |\n", name[1], array[1][1]);
	printf("                         |-----|------------|-----|-----|\n");
	printf("|------------|-----|     |     | %s         | %d   |     |\n", name[3], array[3][1]);
	printf("| %s         | %d   |     |     |------------|-----|     |\n", name[2], array[2][0]);
	printf("|------------|-----|-----|                              |\n");
	printf("| %s         | %d   |                                    |      |------------|-----|\n", name[3], array[3][0]);
	printf("|------------|-----|                                    |      | %s         | %d   |\n", name[3], array[3][2]);
	printf("                                                        |------|------------|-----|\n");
	printf("|------------|-----|                                    |      | %s         | %d   |\n", name[6], array[6][2]);
	printf("| %s         | %d   |                                    |      |------------|-----|\n", name[4], array[4][0]);
	printf("|------------|-----|-----|                              |\n");
	printf("| %s         | %d   |     |     |------------|-----|     |\n", name[5], array[5][0]);
	printf("|------------|-----|     |     | %s         | %d   |     |\n", name[4], array[4][1]);
	printf("                         |-----|------------|-----|-----|\n");
	printf("|------------|-----|     |     | %s         | %d   |\n", name[6], array[6][1]);
	printf("| %s         | %d   |     |     |------------|-----|\n", name[6], array[6][0]);
	printf("|------------|-----|-----|\n");
	printf("| %s         | %d   |\n", name[7], array[7][0]);
	printf("|------------|-----|\n");


}

// частичная сортировка для вывода
void minisort(char new_name[SIZE_NAME][SIZE_NAME], int arr[10], int start, int end) {
	int temp;
	char line[12];
	for (int i = start; i < end; i++) {
		for (int j = start; j < end - 1; j++) {
			if (arr[j] < arr[j + 1]) {
				temp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = temp;

				strcpy(line, new_name[j]);
				strcpy(new_name[j], new_name[j + 1]);
				strcpy(new_name[j + 1], line);
			}
		}
	}

}

// сортировка по местам (функция 2)
char sort(int array[TABLE_LINE][NABLE_COLUMN], int arr[10], char name[SIZE_NAME][SIZE_NAME], int start, int end) {
	int count = 0;
	char new_name[SIZE_NAME][SIZE_NAME];
	for (int i = 0; i < 8; i++) {
		if (array[i][2] != 0) {
			arr[count] = array[i][2];
			strcpy(new_name[count], name[i]);
			count++;
		}
	}

	for (int i = 0; i < 8; i++) {
		if ((array[i][1] != 0) && (array[i][2] == 0)) {
			arr[count] = array[i][1];
			strcpy(new_name[count], name[i]);
			count++;
		}
	}

	for (int i = 0; i < 8; i++) {
		if ((array[i][0] != 0) && (array[i][1] == 0)) {
			arr[count] = array[i][0];
			strcpy(new_name[count], name[i]);
			count++;
		}
	}
	minisort(new_name, arr, 0, 2);
	minisort(new_name, arr, 2, 4);
	minisort(new_name, arr, 4, 8);

	for (int i = start; i < end; i++)
		printf("Место %d занял игрок %s с %d баллами\n", i + 1, new_name[i], arr[i]);
}


// нахождение лучшего игрока в каком-то этапе
int best(int array[TABLE_LINE][NABLE_COLUMN], char name[SIZE_NAME][SIZE_NAME], int new_char[10], int j) {
	int maxx = 0;
	for (int i = 0; i < 8; i++) {
		if (array[i][j] > maxx) {
			maxx = array[i][j];
			strcpy(new_char, name[i]);
		}
		else continue;
	}
	return maxx;
}

// нахождение худшего игрока в каком-то этапе
int worst(int array[TABLE_LINE][NABLE_COLUMN], char name[SIZE_NAME][SIZE_NAME], int new_char[10], int j) {
	int minx = 10;
	for (int i = 0; i < 8; i++) {
		if ((array[i][j] < minx) && (array[i][j] != 0)) {
			minx = array[i][j];
			strcpy(new_char, name[i]);
		}
		else continue;
	}
	return minx;
}
